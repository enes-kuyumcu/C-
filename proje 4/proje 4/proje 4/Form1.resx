<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EAQBAEAQBAEAQBAEAQBAP//Z
</value>
  </data>
</root>